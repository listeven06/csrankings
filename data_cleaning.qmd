---
title: "data_cleaning"
format: html
---

## Task 1

Check if the names of the authors in generated_author_info, acm_fellows, and turing also appear in csrankings.csv table.

```{r load_tables}
library(readr)

csrankings <- read_csv("datasets/csrankings.csv")
author_info <- read_csv("datasets/generated-author-info.csv")
acm_fellows <- read_csv("datasets/acm-fellows.csv")
turing_awards <- read_csv("datasets/turing.csv")

head(csrankings)
head(author_info)
head(acm_fellows)
head(turing_awards)
```

```{r check_names}
library(dplyr)

# Check author_info names not in CS rankings
author_info %>% 
  distinct(name, .keep_all = TRUE) %>%
  select(name, dept) %>% 
  filter(!(name %in% csrankings$name)) %>% 
  rename(affiliation = dept)

# Check acm_fellows names not in CS rankings
acm_fellows %>% 
  distinct(name) %>% 
  filter(!(name %in% csrankings$name))

# Check turing_awards names not in CS rankings
turing_awards %>% 
  distinct(name) %>% 
  filter(!(name %in% csrankings$name))
```

Note:
author_info has csrankings$affiliation,
acm_fellows and turing_awards only have 'name'

Note 2:
potential duplicates when inserting names

Insert:
1) author_info (goes first since it has affiliation)
2) acm_fellows - author_info
3) turing_awards - acm_fellows - author_info

```{r insert_data}
library(RSQLite)
library(DBI)
library(dplyr)

connection <- RSQLite::dbConnect(SQLite(), "csrankings.db")

author_info_toInsert <- author_info %>% 
  distinct(name, .keep_all = TRUE) %>%
  select(name, dept) %>% 
  filter(!(name %in% csrankings$name)) %>% 
  rename(researcher_name = name,
    affiliation = dept)

# remove the toInsert set to save time
acm_fellows_toInsert <- acm_fellows %>% 
  distinct(name) %>% 
  filter(!(name %in% csrankings$name) & !(name %in% author_info$name)) %>% 
  rename(researcher_name = name)

turing_awards_toInsert <- turing_awards %>% 
  distinct(name) %>% 
  filter(!(name %in% csrankings$name) & !(name %in% author_info$name) & !(name %in% acm_fellows$name)) %>% 
  rename(researcher_name = name)

dbWriteTable(connection, "csrankings", author_info_toInsert, append = TRUE, row.names = FALSE)
dbWriteTable(connection, "csrankings", acm_fellows_toInsert, append = TRUE, row.names = FALSE)
dbWriteTable(connection, "csrankings", turing_awards_toInsert, append = TRUE, row.names = FALSE)

result <- dbGetQuery(connection, "SELECT * FROM csrankings;")
print(result)

RSQLite::dbDisconnect(connection)
```

