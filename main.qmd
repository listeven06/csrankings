---
title: "Main"
format: html
editor: visual
---

## Create Database

```{r create_database}
library(RSQLite)

connection <- RSQLite::dbConnect(SQLite(), "csrankings.db")

# csranking
query <- "
CREATE TABLE IF NOT EXISTS csrankings (
    researcher_name VARCHAR(255),
    affiliation VARCHAR(255),
    homepage VARCHAR(2048),
    scholarid VARCHAR(16),
    PRIMARY KEY (researcher_name, affiliation)
);"

RSQLite::dbExecute(connection, query)


# generated_author_info
query <- "
CREATE TABLE IF NOT EXISTS generated_author_info (
    researcher_name VARCHAR(255),
    dept VARCHAR(255),
    area VARCHAR(16),
    count INT,
    adjustedcount DOUBLE,
    publication_year INT,
    PRIMARY KEY (researcher_name),
    FOREIGN KEY (researcher_name) REFERENCES csranking(researcher_name) ON DELETE CASCADE,
    FOREIGN KEY (dept) REFERENCES csranking(affiliation) ON DELETE SET NULL
);"

RSQLite::dbExecute(connection, query)


# acm_fellows
query <- "
CREATE TABLE IF NOT EXISTS acm_fellows (
    researcher_name VARCHAR(255),
    award_year INT,
    PRIMARY KEY (researcher_name, award_year),
    FOREIGN KEY (researcher_name) REFERENCES csrankings(researcher_name) ON DELETE CASCADE
);"

RSQLite::dbExecute(connection, query)


# geolocation
query <- "
CREATE TABLE IF NOT EXISTS  geolocation (
    institution VARCHAR(255),
    latitude DOUBLE,
    longitude DOUBLE,
    PRIMARY KEY (institution),
    FOREIGN KEY (institution) REFERENCES csrankings(affiliation) ON DELETE SET NULL
);"

RSQLite::dbExecute(connection, query)


# country_info
query <- "
CREATE TABLE IF NOT EXISTS country_info (
    institution VARCHAR(255),
    region VARCHAR(255),
    countryabbrv VARCHAR(16),
    PRIMARY KEY (institution),
    FOREIGN KEY (institution) REFERENCES csrankings(affiliation) ON DELETE SET NULL
);
"

RSQLite::dbExecute(connection, query)


# dblp_aliases
query <- "
CREATE TABLE IF NOT EXISTS dblp_aliases (
    alias VARCHAR(255),
    researcher_name VARCHAR(255),
    PRIMARY KEY (researcher_name, alias),
    FOREIGN KEY (researcher_name) REFERENCES csrankings(researcher_name) ON DELETE CASCADE
);
"

RSQLite::dbExecute(connection, query)

RSQLite::dbDisconnect(connection)
```

```{r}
connection <- dbConnect(SQLite(), "csrankings.db")


# conference_ranging
query <- "
CREATE TABLE IF NOT EXISTS conference_ranking (
  acronym VARCHAR(16),
  conference_name VARCHAR(255),
  rank VARCHAR(2),
  PRIMARY KEY (acronym, conference_name),
  FOREIGN KEY (acronym) REFERENCES generated_author_info(acronym)
)
"

RSQLite::dbExecute(connection, query)


# usnews / data
query <- "
CREATE TABLE IF NOT EXISTS data (
  institution_displayName VARCHAR(255),
  institution_schoolType VARCHAR(255),
  institution_aliasNames VARCHAR(255),
  institution_state VARCHAR(50),
  institution_city VARCHAR(255),
  institution_zip INT,
  institution_region VARCHAR(50),
  institution_isPublic BOOLEAN,
  institution_institutionalControl VARCHAR(255),
  institution_primaryPhotoCardThumb TEXT,
  ranking_displayRank VARCHAR(255),
  ranking_sortRank INT,
  searchData_actAvg_rawValue FLOAT,
  searchData_percentReceivingAid_rawValue FLOAT,
  searchData_acceptanceRate_rawValue FLOAT,
  searchData_tuition_rawValue FLOAT,
  searchData_hsGpaAvg_rawValue FLOAT,
  searchData_engineeringRepScore_rawValue TEXT,
  searchData_parentRank_rawValue TEXT,
  searchData_enrollment_rawValue INT,
  searchData_businessRepScore_rawValue TEXT,
  searchData_satAvg_rawValue TEXT,
  searchData_costAfterAid_rawValue FLOAT,
  searchData_testAvgs_displayValue_0_value VARCHAR(255),
  searchData_testAvgs_displayValue_1_value VARCHAR(255),
  PRIMARY KEY (institution_displayName)
);
"

RSQLite::dbExecute(connection, query)

query <- "
CREATE TABLE IF NOT EXISTS field_conference (
  major VARCHAR(255),
  field VARCHAR(255),
  conference VARCHAR(255),
  PRIMARY KEY (conference, field)
)
"
```




