---
title: "Main"
format: html
editor: visual
---

## Create Database

```{r create_database}
library(RSQLite)

connection <- dbConnect(SQLite(), "csrankings.db")

# csranking
query <- "
CREATE TABLE IF NOT EXISTS csrankings (
    researcher_name VARCHAR(255),
    affiliation VARCHAR(255),
    homepage VARCHAR(2048),
    scholarid VARCHAR(16),
    PRIMARY KEY (researcher_name, affiliation)
);"

dbExecute(connection, query)


# generated_author_info
query <- "
CREATE TABLE IF NOT EXISTS generated_author_info (
    researcher_name VARCHAR(255),
    dept VARCHAR(255),
    area VARCHAR(16),
    count INT,
    adjustedcount DOUBLE,
    publication_year INT,
    PRIMARY KEY (researcher_name),
    FOREIGN KEY (researcher_name) REFERENCES csranking(researcher_name) ON DELETE CASCADE,
    FOREIGN KEY (dept) REFERENCES csranking(affiliation) ON DELETE SET NULL
);"

dbExecute(connection, query)


# acm_fellows
query <- "
CREATE TABLE IF NOT EXISTS acm_fellows (
    researcher_name VARCHAR(255),
    award_year INT,
    PRIMARY KEY (researcher_name, award_year),
    FOREIGN KEY (researcher_name) REFERENCES csrankings(researcher_name) ON DELETE CASCADE
);"

dbExecute(connection, query)


# geolocation
query <- "
CREATE TABLE IF NOT EXISTS  geolocation (
    institution VARCHAR(255),
    latitude DOUBLE,
    longitude DOUBLE,
    PRIMARY KEY (institution),
    FOREIGN KEY (institution) REFERENCES csrankings(affiliation) ON DELETE SET NULL
);"

dbExecute(connection, query)


# country_info
query <- "
CREATE TABLE IF NOT EXISTS country_info (
    institution VARCHAR(255),
    region VARCHAR(255),
    countryabbrv VARCHAR(16),
    PRIMARY KEY (institution),
    FOREIGN KEY (institution) REFERENCES csrankings(affiliation) ON DELETE SET NULL
);
"

dbExecute(connection, query)


# dblp_aliases
query <- "
CREATE TABLE IF NOT EXISTS dblp_aliases (
    alias VARCHAR(255),
    researcher_name VARCHAR(255),
    PRIMARY KEY (researcher_name, alias),
    FOREIGN KEY (researcher_name) REFERENCES csrankings(researcher_name) ON DELETE CASCADE
);
"

dbExecute(connection, query)
```



